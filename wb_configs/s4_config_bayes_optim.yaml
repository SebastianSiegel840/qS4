project: qSSM
program: training_bayes.py
method: bayes
metric:
  name: optim_loss
  goal: minimize
parameters:
  A_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  C_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  dt_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  act_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  state_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  linear_quant0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]

  A_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  C_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  dt_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  act_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  state_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  linear_quant1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  
  A_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  C_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  dt_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  act_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  state_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  linear_quant2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  
  A_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  C_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  dt_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  act_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  state_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  linear_quant3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]

  
  coder_quant:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]


  d_model_m0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_state0:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_model_m1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_state1:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_model_m2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_state2:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_model_m3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  d_state3:
    values: [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  n_layers_m:
    values: [4]

command:
  - ${env}
  - python
  - ${program}
  - "--sw"
  - True
  - "--grayscale"
  - "--dataset"
  - cifar10 
  - "--debug"
  - "--wb"
  - online
  - ${args}
